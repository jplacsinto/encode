<?php

namespace App\Http\Controllers;

use App\Http\Requests\{{modelName}}Request;
use App\Models\{{modelName}};
use Illuminate\Http\Request;

class {{modelName}}Controller extends Controller
{
    public function index(Request $request)
    {

        $search = $request->get('search', null);

        $col = $request->get('col', 'id');

        $sort = $request->get('sort', 'desc');

        $rows = $request->get('rows', 10);

        ${{modelNamePluralLowerCase}} = new {{modelName}};

        if(!is_null($search)){
            ${{modelNamePluralLowerCase}} = ${{modelNamePluralLowerCase}}{{whereClause}}
        }

        ${{modelNamePluralLowerCase}} = ${{modelNamePluralLowerCase}}->orderBy($col, $sort)->paginate($rows);

        return view('modules.{{modelNamePluralLowerCase}}.index')->with('{{modelNamePluralLowerCase}}', ${{modelNamePluralLowerCase}});
    }

    public function create()
    {
        return view('modules.{{modelNamePluralLowerCase}}.create');
    }

    public function store({{modelName}}Request $request)
    {
        ${{modelNameSingularLowerCase}} = {{modelName}}::create($request->all());

        return redirect()->route('{{modelNamePluralLowerCase}}.index')->with('message', 'New {{modelNameSingularLowerCase}} created');
    }

    public function edit({{modelName}} ${{modelNameSingularLowerCase}})
    {

        return view('modules.{{modelNamePluralLowerCase}}.edit')->with('{{modelNameSingularLowerCase}}', ${{modelNameSingularLowerCase}});

        return response()->json(${{modelNameSingularLowerCase}});
    }

    public function update({{modelName}}Request $request, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        ${{modelNameSingularLowerCase}}->update($request->all());

        return redirect()->back()->with('success', true);
    }

    public function destroy({{modelName}} ${{modelNameSingularLowerCase}})
    {
        ${{modelNameSingularLowerCase}}->delete();

        return redirect()->back()->with('message', '{{modelName}} successfully deleted');
    }
}